from typing import List


def filter_by_substring(strings: List[str], substring: str) -> List[str]:
    """ Filter an input list of strings only for ones that contain given substring
    >>> filter_by_substring([], 'a')
    []
    >>> filter_by_substring(['abc', 'bacd', 'cde', 'array'], 'a')
    ['abc', 'bacd', 'array']
    """
    return [x for x in strings if x in substring]
assert filter_by_substring(["alice", "bob", "eve"], "a") == ["alice"]
assert filter_by_substring(["alice", "bob", "eve"], "b") == ["bob"]
assert filter_by_substring(["alice", "bob", "eve"], "") == ["alice", "bob", "eve"]
assert filter_by_substring(["alice", "bob", "eve"], " ") == []
assert filter_by_substring(["alice", "bob", "eve"], "e ") == []
assert filter_by_substring(["alice", "bob", "eve"], "e a") == []
assert filter_by_substring(["alice", "bob", "eve"], "ev") == ["eve"]
assert filter_by_substring(["alice", "bob", "eve"], "ec") == []
assert filter_by_substring(["alice", "bob", "eve"], "ali") == ["alice"]
assert filter_by_substring(['Panda', 'Apple', 'Banana', 'Orange'], 'z') == []
assert filter_by_substring(['Panda', 'Apple', 'Banana', 'Orange'], 'an') == ['Panda', 'Banana', 'Orange']
assert filter_by_substring(['Chomik', 'Kot', 'Pies', 'Kon'], 'os') == []
assert filter_by_substring(["hi", "hello", "hey"], "h") == ["hi", "hello", "hey"]
assert filter_by_substring(['mama', 'papa', 'sister'], 'si') == ['sister']
assert filter_by_substring(["hello", "how", "are", "you"], "are") == ["are"]
assert filter_by_substring(["this", "is", "a", "string"], "") == ["this", "is", "a", "string"]
assert ["hello", "goodbye", "1"] == filter_by_substring(["hello", "goodbye", "1"], "")
assert filter_by_substring(['abc', 'bcd', 'abcde', 'a'], 'bc') == ['abc', 'bcd', 'abcde']
assert filter_by_substring(['abc', 'bcd', 'abcde', 'a'], 'a') == ['abc', 'abcde', 'a']
assert filter_by_substring(['abc', 'bcd', 'abcde', 'a'], 'b') == ['abc', 'bcd', 'abcde']
assert filter_by_substring(['abc', 'bcd', 'abcde', 'a'], 'ef') == []
assert filter_by_substring(['abc', 'bcd', 'abcde', 'a'], 'abcd') == ['abcde']
assert filter_by_substring(['abc', 'abcdefg', 'abcdefg'], 'ba') == []
assert filter_by_substring(['abc', 'abcdefg', 'abcdefg'], 'abc') == ['abc', 'abcdefg', 'abcdefg']
assert filter_by_substring(['123abc', '321', '123', 'a'], 'a') == ['123abc', 'a']
assert filter_by_substring(['123abc', '321', '123', 'a'], 'b') == ['123abc']
assert filter_by_substring(['abc', 'bca', 'cab'], 'c') == ['abc', 'bca', 'cab']
assert filter_by_substring(['abc', 'bca', 'cab'], 'cd') == []
assert filter_by_substring(['abc', 'bca', 'cab'], '') == ['abc', 'bca', 'cab']
assert filter_by_substring(['hint', 'missing', 'hint', 'hints'], 'mi') == ['missing']
assert filter_by_substring(["to", "ask", "to", "ask", "one", "more", "time"], "no") == []
assert filter_by_substring(["to", "ask", "to", "ask", "one", "more", "time"], "ask") == ["ask", "ask"]
assert filter_by_substring(['a', 'ab', 'xyz', 'abc'], 'a') == ['a', 'ab', 'abc']
assert filter_by_substring(['a', 'ab', 'xyz', 'abc'], 'b') == ['ab', 'abc']
assert filter_by_substring(['a', 'ab', 'xyz', 'abc'], 'x') == ['xyz']
assert filter_by_substring(['a', 'ab', 'xyz', 'abc'], 'bc') == ['abc']
assert filter_by_substring(['a', 'ab', 'xyz', 'abc'], 'q') == []
assert filter_by_substring(['a', 'ab', 'xyz', 'abc'], 'z') == ['xyz']
assert filter_by_substring(['a', 'b', 'good', 'bad', 'c'], 'b') == ['b', 'bad']
assert filter_by_substring(['a', 'b', 'good', 'bad', 'c'], 'xxx') == []
assert filter_by_substring(['a', 'b', 'good', 'bad', 'c'], '') == ['a', 'b', 'good', 'bad', 'c']
assert filter_by_substring(['yes', 'yesterday', 'yesterday'], 'ye') == ['yes', 'yesterday', 'yesterday']
assert filter_by_substring(['yes', 'yesterday', 'yesterday'], 'terday') == ['yesterday', 'yesterday']
assert filter_by_substring(['yes', 'yesterday', 'yesterday'], 'y') == ['yes', 'yesterday', 'yesterday']
assert filter_by_substring(['yes', 'yesterday', 'yesterday'], 'yesterd') == ['yesterday', 'yesterday']
assert filter_by_substring(['yes', 'yesterday', 'yesterday'], 'yesterday') == ['yesterday', 'yesterday']
assert filter_by_substring(['yes', 'yesterday', 'yesterday'], 'esterday') == ['yesterday', 'yesterday']
assert [] == filter_by_substring(['cat', 'dog', 'catfish', 'catdog'], 'xxx')
assert ['cat', 'catfish', 'catdog'] == filter_by_substring(['cat', 'dog', 'catfish', 'catdog'], 'cat')
assert filter_by_substring(["hallo", "world", "harry", "potter"], "all") == ["hallo"]
assert filter_by_substring(["hallo", "world", "harry", "potter"], "") == ["hallo", "world", "harry", "potter"]
assert filter_by_substring(['hello', 'world', 'hello world'], 'h') == ['hello', 'hello world']
assert filter_by_substring(['hello', 'world', 'hello world'], 'x') == []
assert filter_by_substring(['hello', 'world', 'hello world'], 'e') == ['hello', 'hello world']
assert filter_by_substring(['hello', 'world', 'hello world'], ' ') == ['hello world']
assert filter_by_substring(['hello', 'world', 'hello world'], 'o w') == ['hello world']
assert filter_by_substring(['hello', 'world', 'hello world'], 'o  w') == []
assert filter_by_substring(['hello', 'world', 'hello world'], 'o   w') == []
assert filter_by_substring(["cat", "dog", "paper"], "dog") == ["dog"]
assert filter_by_substring(["cat", "dog", "paper"], "paper") == ["paper"]
assert filter_by_substring(["cat", "dog", "paper"], "fish") == []
assert filter_by_substring(["cat", "dog", "paper"], "cat") == ["cat"]
assert filter_by_substring(['helloworld', '', 'hello', 'helloworld!'], 'world') == ['helloworld', 'helloworld!']
assert filter_by_substring(['helloworld', '', 'hello', 'helloworld!'], 'thx') == []
assert filter_by_substring(["I", "am", "a", "producer"], "r") == ["producer"]
assert filter_by_substring(['abc', 'bca', 'abcdefg'], 'ab') == ['abc', 'abcdefg']
assert filter_by_substring(['abc', 'bca', 'abcdefg'], 'g') == ['abcdefg']
assert filter_by_substring(['abc', 'bca', 'abcdefg'], 'gf') == []
assert filter_by_substring(["Hello", "There", "General", "Kenobi"], "Hi") == []
assert filter_by_substring(["apple", "beetroot", "carrot"], "troot") == ["beetroot"]
assert filter_by_substring(["apple", "beetroot", "carrot"], "") == ["apple", "beetroot", "carrot"]
assert filter_by_substring(['foo', 'bar', 'baz'], 'z') == ['baz']
assert filter_by_substring(['foo', 'bar', 'baz'], 'fo') == ['foo']
assert filter_by_substring(["dog", "cow", "pig"], "og") == ["dog"]
assert filter_by_substring(["dog", "cow", "pig"], "co") == ["cow"]
assert filter_by_substring(["dog", "cow", "pig"], "pig") == ["pig"]
assert filter_by_substring(["dog", "cow", "pig"], "bird") == []
assert filter_by_substring(["a", "b", "c", "d"], "e") == []
assert filter_by_substring(['foo', 'bar', 'baz'], 'qwerty') == []
assert filter_by_substring(["hello", "world", "hello world"], "hello") == ["hello", "hello world"]
assert filter_by_substring(["hello", "world", "hello world"], "hello_world") == []
assert filter_by_substring(["hello", "world", "hello world"], "ello") == ["hello", "hello world"]
assert filter_by_substring(["hell", "world", "hello world"], "ello") == ["hello world"]
assert filter_by_substring(["hell", "world", "hello world"], "") == ["hell", "world", "hello world"]
assert filter_by_substring(["hell", "world", "hello world"], " ") == ["hello world"]
assert filter_by_substring(["hello", "there", "how", "are", "you"], "are") == ["are"]
assert filter_by_substring(["123", "1", "123"], "2") == ["123", "123"]
assert filter_by_substring(["123", "1", "123"], "3") == ["123", "123"]
assert filter_by_substring(["hello", "world", "long string"], "short") == []
assert filter_by_substring(["hello", "world", "long string"], "long") == ["long string"]
assert ['ab', 'ba'] == filter_by_substring(['ab', 'ba', 'c'], 'a')
assert ['ab', 'ba'] == filter_by_substring(['ab', 'ba', 'c'], 'b')
assert filter_by_substring(['a', 'b', 'c'], 'd') == []
assert filter_by_substring(['ab', 'bc', 'cd'], 'b') == ['ab', 'bc']
assert filter_by_substring(["something", "my", "name", "is", "csab"], "not") == []
assert filter_by_substring(['abc', 'abcdef', 'abcd'], 'dd') == []
assert ["a", "aa", "aaa"] == filter_by_substring(["a", "aa", "aaa", "b", "bb", "bbb"], "a")
assert filter_by_substring(['foo', 'bar', 'baz'], 'f') == ['foo']
assert filter_by_substring(['foo', 'bar', 'baz'], 'x') == []
assert filter_by_substring(["salo", "sava", "sir", "saxophone"], "ir") == ["sir"]
assert filter_by_substring(['dog', 'cat', 'superman'], 'super') == ['superman']
assert filter_by_substring(['dog', 'cat', 'superman'], 'dog') == ['dog']
assert filter_by_substring(['dog', 'cat', 'superman'], 'nope') == []
assert filter_by_substring(["One", "Two", "Three"], "T") == ["Two", "Three"]
assert filter_by_substring(["One", "Two", "Three"], "z") == []
assert filter_by_substring(['', 'hello', 'world', '1'], 'W') == []
assert filter_by_substring(['', 'hello', 'world', '1'], '1') == ['1']
assert filter_by_substring(['', 'hello', 'world', '1'], '') == ['', 'hello', 'world', '1']
assert filter_by_substring(["hello", "hear", "bye"], "he") == ["hello", "hear"]
assert filter_by_substring(["hello", "hear", "bye"], "") == ["hello", "hear", "bye"]
assert filter_by_substring(["hello", "hear", "bye"], "b") == ["bye"]
assert filter_by_substring(["1", "2", "3"], "1") == ["1"]
assert filter_by_substring(["dog", "cat", "mouse"], "cow") == []
assert filter_by_substring(["computer", "by", "house"], "by") == ["by"]
assert filter_by_substring(["school", "class", "programming"], "gram") == ["programming"]
assert filter_by_substring(["hello", "to", "my", "friend"], "friend") == ["friend"]
assert filter_by_substring(["hello", "to", "my", "friend"], "fri") == ["friend"]
assert filter_by_substring(["hello", "to", "my", "friend"], "") == ["hello", "to", "my", "friend"]
assert filter_by_substring(["hello", "to", "my", "friend"], "zy") == []
assert filter_by_substring([], "zy") == []
assert filter_by_substring(["adam", "wes", "julie"], "es") == ["wes"]
assert filter_by_substring(["adam", "wes", "julie"], "ju") == ["julie"]
assert filter_by_substring(["hello", "world", "foo", "bar"], "hello") == ["hello"]
assert filter_by_substring(["hello", "world", "foo", "bar"], "bar") == ["bar"]
assert filter_by_substring(["hello", "world", "foo", "bar"], "baz") == []
assert filter_by_substring(["Hello", "Hello World", "Hello, World", "Hello World"], "World") == ["Hello World", "Hello, World", "Hello World"]
assert filter_by_substring(["Hello", "Hello World", "Hello, World", "Hello World"], ",") == ["Hello, World"]
assert filter_by_substring(["Hello", "Hello World", "Hello, World", "Hello World"], "") == ["Hello", "Hello World", "Hello, World", "Hello World"]
assert filter_by_substring(["Hello", "Hello World", "Hello, World", "Hello World"], "ello") == ["Hello", "Hello World", "Hello, World", "Hello World"]
assert filter_by_substring(["Hello", "Hello World", "Hello, World", "Hello World"], "blabla") == []
assert filter_by_substring(["Hello", "Hello World", "Hello, World", "Hello World"], "llo, Wor") == ["Hello, World"]
assert filter_by_substring(["substring", "subsubstring", "subsubsubstring"], "subsub") == ["subsubstring", "subsubsubstring"]
assert filter_by_substring(["substring", "subsubstring", "subsubsubstring"], "subsubsub") == ["subsubsubstring"]
assert filter_by_substring(["substring", "subsubstring", "subsubsubstring"], "subsubsubsub") == []
assert filter_by_substring(["all", "the", "feels"], "boo") == []
assert filter_by_substring(["all", "the", "feels"], "e") == ["the", "feels"]
assert filter_by_substring(["the", "the", "the"], "the") == ["the", "the", "the"]
assert filter_by_substring(["python", "django", "pyladies"], "py") == ["python", "pyladies"]
assert filter_by_substring(["python", "django", "pyladies"], "java") == []
assert filter_by_substring(["3", "hello", "a", "ab", "aaa"], "") == ["3", "hello", "a", "ab", "aaa"]
assert filter_by_substring(["3", "hello", "a", "ab", "aaa"], "hel") == ["hello"]
assert filter_by_substring(["3", "hello", "a", "ab", "aaa"], "1") == []
assert filter_by_substring(["3", "hello", "a", "ab", "aaa"], "a1") == []
assert filter_by_substring(['peach', 'apple', 'pear', 'banana'], 'pea') == ['peach', 'pear']
assert filter_by_substring(['peach', 'apple', 'pear', 'banana'], 'e') == ['peach', 'apple', 'pear']
assert filter_by_substring(['peach', 'apple', 'pear', 'banana'], 'ea') == ['peach', 'pear']
assert filter_by_substring(['peach', 'apple', 'pear', 'banana'], 'x') == []
assert filter_by_substring(["aa", "abc", "ccc"], "c") == ["abc", "ccc"]
assert filter_by_substring(["aa", "abc", "ccc"], "d") == []
assert filter_by_substring(['apple', 'banana', 'corn', 'peach'], 'peach') == ['peach']
assert filter_by_substring(["bye", "world"], "hello") == []
assert filter_by_substring(["goodbye", "hello"], "hello") == ["hello"]
assert filter_by_substring(["aaa", "aaa"], "a") == ["aaa", "aaa"]
assert filter_by_substring(["cdd", "aaa"], "c") == ["cdd"]
assert filter_by_substring(["apple", "basket", "car", "carrot"], "egg") == []
assert filter_by_substring(["apple", "basket", "car", "carrot"], "") == ["apple", "basket", "car", "carrot"]
assert filter_by_substring([], "egg") == []
assert filter_by_substring(["a"], "a") == ["a"]
assert filter_by_substring(["blah", "bleh", "blih"], "blo") == []
assert filter_by_substring(["blah", "bleh", "blih"], "bl") == ["blah", "bleh", "blih"]
assert filter_by_substring(["blah", "bleh", "blih"], "") == ["blah", "bleh", "blih"]
assert filter_by_substring(["spam", "eggs", "bacon"], "eggs") == ["eggs"]
assert filter_by_substring(["eggs", "eggs", "bacon"], "eggs") == ["eggs", "eggs"]
assert filter_by_substring(["bacon", "bacon", "bacon"], "bacon") == ["bacon", "bacon", "bacon"]
assert filter_by_substring(["spam", "eggs", "bacon"], "") == ["spam", "eggs", "bacon"]
assert filter_by_substring(["spam", "eggs", "bacon"], "ham") == []
assert filter_by_substring(['hello', 'world', 'foo', 'bar'], 'z') == []
assert filter_by_substring(["banana", "dog", "b", "cat", "c"], "t") == ["cat"]
assert filter_by_substring(["Apple", "Orange", "Melon", "Grape"], "") == ["Apple", "Orange", "Melon", "Grape"]
assert filter_by_substring(['abc', 'abcdef', 'abcde', 'abcda'], 'ab') == ['abc', 'abcdef', 'abcde', 'abcda']
assert filter_by_substring(['abc', 'abcdef', 'abcde', 'abcda'], 'de') == ['abcdef', 'abcde']
assert filter_by_substring(['abc', 'abcdef', 'abcde', 'abcda'], 'cdef') == ['abcdef']
assert filter_by_substring(['abc', 'abcdef', 'abcde', 'abcda'], 'cdefg') == []
assert filter_by_substring(["hello", "world", "goodbye", "world"], "bad") == []
