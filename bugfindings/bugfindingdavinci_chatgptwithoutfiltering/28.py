from typing import List


def concatenate(strings: List[str]) -> str:
    """ Concatenate list of strings into a single string
    >>> concatenate([])
    ''
    >>> concatenate(['a', 'b', 'c'])
    'abc'
    """
    return ' '.join(strings)
assert concatenate(["foo", "bar", "baz"]) == "foobarbaz"
assert concatenate(["hello", "world"]) == "helloworld"
assert concatenate(["hello", "world", "!"]) == "helloworld!"
assert concatenate(["foo", "bar", "baz", "!"]) == "foobarbaz!"
assert concatenate(["welcome", " to", " the", " jungle", " "]) == "welcome to the jungle "
assert concatenate(["abc", "123", ""]) == "abc123"
assert concatenate(["abc", "123", "xyz"]) == "abc123xyz"
assert concatenate(["", "123", "xyz"]) == "123xyz"
assert concatenate(["", "", "xyz"]) == "xyz"
assert concatenate(["", "", ""]) == ""
assert concatenate(["one", "two", "three"]) == "onetwothree"
assert concatenate(["aa", "bb", "cc"]) == "aabbcc"
assert concatenate(["aa", ""]) == "aa"
assert concatenate(["", "bb"]) == "bb"
assert concatenate(["", ""]) == ""
assert concatenate(["aa"]) == "aa"
assert concatenate([""]) == ""
assert concatenate(["aa", "bb", ""]) == "aabb"
assert concatenate(["aa", "", "bb"]) == "aabb"
assert concatenate(["", "aa", "bb"]) == "aabb"
assert concatenate(["aa", "bb", "cc", "dd"]) == "aabbccdd"
assert concatenate(["a", "b", "c", "a", "b", "c"]) == "abcabc"
assert concatenate([]) == ""
assert concatenate(["a", "b", "c", "d"]) == "abcd"
assert concatenate(["a", "b", "c", "d", "e"]) == "abcde"
assert concatenate(["a", "b", "c", "d", "e", "f"]) == "abcdef"
assert concatenate(["a", "b", "c", "d", "e", "f", "g"]) == "abcdefg"
assert concatenate(["a", "b", "c", "d", "e", "f", "g", "h"]) == "abcdefgh"
assert concatenate(["a", "b", "c", "d", "e", "f", "g", "h", "i"]) == "abcdefghi"
assert concatenate(["Hello ", "there!"]) == "Hello there!"
assert concatenate(["what", "the", "hell"]) == "whatthehell"
assert concatenate(["Python", "is", "interesting"]) == "Pythonisinteresting"
assert concatenate(["quick", "brown", "fox"]) == "quickbrownfox"
assert concatenate(["the", "quick", "brown", "fox"]) == "thequickbrownfox"
assert concatenate(["this", "is", "a", "test"]) == "thisisatest"
assert concatenate(["python", "", "c++"]) == "pythonc++"
assert concatenate(["python", "", ""]) == "python"
assert concatenate(["a", "b", "c"]) == "abc"
assert concatenate(["a", "bc", "de"]) == "abcde"
assert concatenate(["ab", "c", "d"]) == "abcd"
assert concatenate(["ab", "cde", "fg"]) == "abcdefg"
assert concatenate(["1", "2", "3"]) == "123"
assert concatenate(["my", "name", "is", "john"]) == "mynameisjohn"
assert concatenate(["", "cd", "ef"]) == "cdef"
assert concatenate(["", "", "ef"]) == "ef"
assert concatenate(["alpha", "beta", "gamma"]) == "alphabetagamma"
assert concatenate(["alpha", "beta", "gamma", "delta"]) == "alphabetagammadelta"
assert concatenate(["one", "two", "three", "four"]) == "onetwothreefour"
assert concatenate(["one", "two", "three", "four", "five"]) == "onetwothreefourfive"
assert concatenate(["hello", "world", "hola", "mundo"]) == "helloworldholamundo"
assert concatenate(["ab", "cd", "ef", "gh"]) == "abcdefgh"
assert concatenate(["ab", "cd", "ef", "gh", "ij"]) == "abcdefghij"
assert concatenate(["a"] * 10) == "aaaaaaaaaa"
assert concatenate(["A", "B", "C"]) == "ABC"
assert concatenate(["D", "E", "F"]) == "DEF"
assert concatenate(["red", "green", "blue"]) == "redgreenblue"
assert concatenate(["a", "bc", "def"]) == "abcdef"
assert concatenate(["x", "y", "z"]) == "xyz"
assert concatenate(["spurious", "mutation"]) == "spuriousmutation"
assert concatenate(["yell", "yell", "yell"]) == "yellyellyell"
assert concatenate(["hello", "there", "world"]) == "hellothereworld"
assert concatenate(["ha", "ha", "ha"]) == "hahaha"
assert concatenate(["a"]) == "a"
assert concatenate(["this is a ", "long text"]) == "this is a long text"
assert concatenate(["this is a ", "long text ", "with multiple strings"]) == "this is a long text with multiple strings"
assert concatenate(["123", "456", "789"]) == "123456789"
assert concatenate(["a", "ab", "abc"]) == "aababc"
assert concatenate(["Hello", " ", "World"]) == "Hello World"
assert concatenate(["This", " ", "is", " ", "a", " ", "string"]) == "This is a string"
assert concatenate(["Bye", "world"]) == "Byeworld"
assert concatenate(["Hello", "world", "!"]) == "Helloworld!"
assert concatenate(["Hello", " ", "world", "!"]) == "Hello world!"
assert concatenate(["Hello", "world", "!", "How", "are", "you"]) == "Helloworld!Howareyou"
assert concatenate(["", "Hello", "world", "!"]) == "Helloworld!"
assert concatenate(["Hello ", "World"]) == "Hello World"
assert concatenate(["Python", "is", "great!"]) == "Pythonisgreat!"
assert concatenate(["acb", "edf", "ihg"]) == "acbedfihg"
assert concatenate(["abc", "def", "ghi", "jkl"]) == "abcdefghijkl"
assert concatenate(["", "", "", ""]) == ""
assert concatenate(["abc", "", "def", "", "ghi", "", "jkl"]) == "abcdefghijkl"
assert concatenate(["ab"]) == "ab"
assert concatenate(["abc"]) == "abc"
assert concatenate(["abcd"]) == "abcd"
assert concatenate(["abcde"]) == "abcde"
assert concatenate(["abcdef"]) == "abcdef"
assert concatenate(["abcdefg"]) == "abcdefg"
assert concatenate(["abcdefgh"]) == "abcdefgh"
assert concatenate(["or", "and", "not"]) == "orandnot"
assert concatenate(["Foo", "Bar"]) == "FooBar"
assert concatenate(["Hello", "", "World"]) == "HelloWorld"
assert concatenate(["Hello", "World", ""]) == "HelloWorld"
assert concatenate(["", "Hello", "World"]) == "HelloWorld"
assert concatenate(["", "", "Hello", "World"]) == "HelloWorld"
assert concatenate(["\n", "\t", "Hello", "World"]) == "\n\tHelloWorld"
assert concatenate(["Hello", "World", "\n", "\t"]) == "HelloWorld\n\t"
assert concatenate(["", "", "", "", "Hello", "World", "", "", ""]) == "HelloWorld"
assert concatenate(["Hello", " ", "world"]) == "Hello world"
assert concatenate(["a", "bc", "d"]) == "abcd"
assert concatenate(["abc", "d", "ef"]) == "abcdef"
assert concatenate(["Python", "is", "cool"]) == "Pythoniscool"
assert concatenate(["hello", " ", "world"]) == "hello world"
assert concatenate(["h", "e", "l", "l", "o", " ", "w", "o", "r", "l", "d"]) == "hello world"
assert concatenate(["def", "ghi", "abc"]) == "defghiabc"
assert concatenate(["How", " are", " you?"]) == "How are you?"
assert concatenate(["","a"]) == "a"
assert concatenate(["a",""]) == "a"
assert concatenate(["hello","world"]) == "helloworld"
assert concatenate(["hello","","world"]) == "helloworld"
assert concatenate(["hello","","","world"]) == "helloworld"
assert concatenate(["hello","", "","","world"]) == "helloworld"
assert concatenate(["A", "B", "C", "D"]) == "ABCD"
assert concatenate(["string", "list"]) == "stringlist"
assert concatenate(["abc", "123"]) == "abc123"
assert concatenate(["concatenate"]) == "concatenate"
assert concatenate(["do ", "re ", "mi"]) == "do re mi"
assert concatenate(["ab", "cd"]) == "abcd"
assert concatenate(["a", "bb", "ccc"]) == "abbccc"
assert concatenate(["Ala", "ma", "kota"]) == "Alamakota"
assert concatenate(["a", "a", "a", "a", "a", "a", "a", "a"]) == "aaaaaaaa"
assert concatenate(["ab", "cd", "ef"]) == "abcdef"
