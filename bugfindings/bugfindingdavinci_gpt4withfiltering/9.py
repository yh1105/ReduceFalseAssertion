from typing import List, Tuple


def rolling_max(numbers: List[int]) -> List[int]:
    """ From a given list of integers, generate a list of rolling maximum element found until given moment
    in the sequence.
    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])
    [1, 2, 3, 3, 3, 4, 4]
    """
    running_max = None
    result = []

    for n in numbers:
        if running_max is None:
            running_max = n
        else:
            running_max = max(numbers)

        result.append(running_max)

    return result
assert rolling_max([1, 2, 3, 4, 5]) == [1, 2, 3, 4, 5]
assert rolling_max([1, 2, 4, 3, 5]) == [1, 2, 4, 4, 5]
assert rolling_max([3, 2, 1, 4, 5]) == [3, 3, 3, 4, 5]
assert rolling_max([5, 4, 3, 2, 1]) == [5, 5, 5, 5, 5]
assert rolling_max([5, 5, 4, 4, 3, 3, 3, 2, 2, 1]) == [5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
assert rolling_max([5, 5, 4, 4, 3, 3, 3, 2, 2, 5]) == [5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
assert rolling_max([5, 5, 5, 4, 4, 3, 3, 3, 2, 2, 5]) == [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
assert rolling_max([5, 4, 3, 2, 5]) == [5, 5, 5, 5, 5]
assert rolling_max([5, 4, 3, 2, 1, 5]) == [5, 5, 5, 5, 5, 5]
assert rolling_max([5, 4, 3, 2, 1, 5, 5]) == [5, 5, 5, 5, 5, 5, 5]
assert rolling_max([5, 1, 5, 1, 5]) == [5, 5, 5, 5, 5]
assert rolling_max([5, 1, 3, 7, 5]) == [5, 5, 5, 7, 7]
assert rolling_max([5, 1, 5, 1, 1]) == [5, 5, 5, 5, 5]
assert rolling_max([3, 2, 1, 2, 3]) == [3, 3, 3, 3, 3]
assert rolling_max([1, 2, 1, 2, 1]) == [1, 2, 2, 2, 2]
assert rolling_max([1, 1, 1, 1, 1]) == [1, 1, 1, 1, 1]
assert rolling_max([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
assert rolling_max([1, 2, 3, 2, 1]) == [1, 2, 3, 3, 3]
assert rolling_max([1, 2, 3, 3, 2]) == [1, 2, 3, 3, 3]
assert rolling_max([1, 2, 3, 2, 3]) == [1, 2, 3, 3, 3]
assert rolling_max([1, 2, 3, 1, 2]) == [1, 2, 3, 3, 3]
assert rolling_max([1, 2, 1, 2, 3]) == [1, 2, 2, 2, 3]
assert rolling_max([1]) == [1]
assert rolling_max([-5, -6, -7]) == [-5, -5, -5]
assert rolling_max([3, 2, 1, 5, 4]) == [3, 3, 3, 5, 5]
assert rolling_max([7, 6, 5, 4, 3, 2, 1]) == [7, 7, 7, 7, 7, 7, 7]
assert rolling_max([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]) == [1, 3, 5, 7, 9, 9, 9, 9, 9, 9]
assert rolling_max([-1, -3, -5, -7, -9, -2, -4, -6, -8, 0]) == [-1, -1, -1, -1, -1, -1, -1, -1, -1, 0]
assert rolling_max([1, 2, 5, 3, 4]) == [1, 2, 5, 5, 5]
assert rolling_max([5, 3, 4, 1, 2]) == [5, 5, 5, 5, 5]
assert rolling_max([1, 3, 3, 4, 5]) == [1, 3, 3, 4, 5]
assert rolling_max([5, 4, 5, 4, 5]) == [5, 5, 5, 5, 5]
assert rolling_max([5, 4, 5, 5, 5]) == [5, 5, 5, 5, 5]
assert rolling_max([5, 4, 5, 1, 5]) == [5, 5, 5, 5, 5]
assert rolling_max([5, 4, 5, 1, 6]) == [5, 5, 5, 5, 6]
assert rolling_max([5, 4, 5, 1, 5, 1, 6]) == [5, 5, 5, 5, 5, 5, 6]
assert rolling_max([5, 4, 5, 1, 5, 1, 5]) == [5, 5, 5, 5, 5, 5, 5]
assert rolling_max([2, 3, 5, 1, 8, 7, 6, 4]) == [2, 3, 5, 5, 8, 8, 8, 8]
assert rolling_max([3, 4, 5, 6, 7, 8, 9, 1, 2]) == [3, 4, 5, 6, 7, 8, 9, 9, 9]
assert rolling_max([10, 9, 8, 7, 6, 5, 4, 3, 2, 1]) == [10, 10, 10, 10, 10, 10, 10, 10, 10, 10]
assert rolling_max([1, 10, 2, 9, 3, 8, 4, 7, 5, 6]) == [1, 10, 10, 10, 10, 10, 10, 10, 10, 10]
assert rolling_max([1, 2, 3, 4, 5, 4, 3, 2, 1]) == [1, 2, 3, 4, 5, 5, 5, 5, 5]
assert rolling_max([3, 3, 3, 3, 3, 3, 3, 3, 3]) == [3, 3, 3, 3, 3, 3, 3, 3, 3]
assert rolling_max([1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2]) == [1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
assert rolling_max([2, 1]) == [2, 2]
assert rolling_max([1, 3, 2]) == [1, 3, 3]
assert rolling_max([1, 2, 3, 5, 1, 2, 3, 5, 1, 2, 3, 5]) == [1, 2, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5]
assert rolling_max([2, 3, 5, 1, 2, 3, 5, 1, 2, 3, 5, 1]) == [2, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
assert rolling_max([3, 5, 1, 2, 3, 5, 1, 2, 3, 5, 1, 2]) == [3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
assert rolling_max([5, 1, 2, 3, 5, 1, 2, 3, 5, 1, 2, 3]) == [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
assert rolling_max([5]) == [5]
assert rolling_max([1, 5, 2, 7, 6, 4, 5, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) == [1, 5, 5, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 9, 10]
assert rolling_max([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
assert rolling_max([]) == []
assert rolling_max([5, -1, 3, 7, -5]) == [5, 5, 5, 7, 7]
assert rolling_max([5, -5, -5, 7, -5]) == [5, 5, 5, 7, 7]
assert rolling_max([5, -5, -1, 7, -5]) == [5, 5, 5, 7, 7]
assert rolling_max([-5, -5, -1, 7, -5]) == [-5, -5, -1, 7, 7]
assert rolling_max([-5, -5, -5, 7, -5]) == [-5, -5, -5, 7, 7]
assert rolling_max([-5, -5, -5, -5, -5]) == [-5, -5, -5, -5, -5]
assert rolling_max([1, 5, 1, 5, 1]) == [1, 5, 5, 5, 5]
assert rolling_max([3, 2, 1, 2, 3, 2, 1, 2, 3]) == [3, 3, 3, 3, 3, 3, 3, 3, 3]
assert rolling_max([2, 3, 1, 2, 3, 2, 1, 2, 3]) == [2, 3, 3, 3, 3, 3, 3, 3, 3]
assert rolling_max([1, 5, 4, 3, 2]) == [1, 5, 5, 5, 5]
assert rolling_max([1, 1, 5, 3, 2]) == [1, 1, 5, 5, 5]
assert rolling_max([1, 1, 1, 1, 5]) == [1, 1, 1, 1, 5]
assert rolling_max([4, 3, 2, 1, 2]) == [4, 4, 4, 4, 4]
assert rolling_max([4, 3, 2, 1, 1]) == [4, 4, 4, 4, 4]
assert rolling_max([4, 3, 2, 1, 1, 2]) == [4, 4, 4, 4, 4, 4]
assert rolling_max([1, 2]) == [1, 2]
assert rolling_max([1, 2, 3]) == [1, 2, 3]
assert rolling_max([3, 2, 1]) == [3, 3, 3]
assert rolling_max([1, 2, 1]) == [1, 2, 2]
assert rolling_max([1, 1, 2]) == [1, 1, 2]
assert rolling_max([2, 1, 1]) == [2, 2, 2]
assert rolling_max([1, 1, 1]) == [1, 1, 1]
assert rolling_max([1, 1, 2, 3, 2, 1]) == [1, 1, 2, 3, 3, 3]
assert rolling_max([1, 1, 2, 3, 2, 1, 2, 3, 4, 3, 2, 1]) == [1, 1, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4]
assert rolling_max([2, 3, 1, 4, 5]) == [2, 3, 3, 4, 5]
assert rolling_max([1, 2, 2, 4, 5]) == [1, 2, 2, 4, 5]
assert rolling_max([1, 2, 3, 3, 3]) == [1, 2, 3, 3, 3]
assert rolling_max([1, 2, 4, 2, 5]) == [1, 2, 4, 4, 5]
assert rolling_max([4, 2, 3, 2, 1]) == [4, 4, 4, 4, 4]
assert rolling_max([1, 1, 1, 2, 3]) == [1, 1, 1, 2, 3]
assert rolling_max([3, 2, 1, 1, 1]) == [3, 3, 3, 3, 3]
assert rolling_max([1, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 5]) == [1, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 5]
assert rolling_max([6, 5, 4, 3, 2, 1]) == [6, 6, 6, 6, 6, 6]
assert rolling_max([0, 1, 0, 0, 1, 0, 1, 0, 1, 0]) == [0, 1, 1, 1, 1, 1, 1, 1, 1, 1]
assert rolling_max([0, 0, 0, 0, 0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
assert rolling_max([-1, 5, 0, -9, -17, -33, -81, 13, 13, 13]) == [-1, 5, 5, 5, 5, 5, 5, 13, 13, 13]
assert rolling_max([-3, -3, -3, -3, -3, -3, -3, -3, -3, -3]) == [-3, -3, -3, -3, -3, -3, -3, -3, -3, -3]
assert rolling_max([-1, -5, -7, -8, -9, -3, -10, -10, -7, -6]) == [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1]
assert rolling_max([5, 2, 3, 4, 1]) == [5, 5, 5, 5, 5]
assert rolling_max([5, 2, 1, 4, 1]) == [5, 5, 5, 5, 5]
assert rolling_max([1, 3, 5, 2, 4]) == [1, 3, 5, 5, 5]
assert rolling_max([5, 5, 5, 5, 5]) == [5, 5, 5, 5, 5]
assert rolling_max([5, -10, 5, -20, 5]) == [5, 5, 5, 5, 5]
assert rolling_max([1, -1, -1, -1, -1]) == [1, 1, 1, 1, 1]
assert rolling_max([1, 1, 2, 1, 1]) == [1, 1, 2, 2, 2]
assert rolling_max([1, 2, 3, 5, 4]) == [1, 2, 3, 5, 5]
assert rolling_max([5, 5, 5, 4, 5]) == [5, 5, 5, 5, 5]
assert rolling_max([5, 5, 5, 5, 4]) == [5, 5, 5, 5, 5]
assert rolling_max([5, 4, 4, 4, 4]) == [5, 5, 5, 5, 5]
assert rolling_max([4, 4, 4, 4, 5]) == [4, 4, 4, 4, 5]
assert rolling_max([4, 5, 4, 4, 4]) == [4, 5, 5, 5, 5]
assert rolling_max([3, 3, 3, 3, 3, 1, 2, 3, 3, 3, 3, 3]) == [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
assert rolling_max([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]) == [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
assert rolling_max([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
assert rolling_max([5, 4, 3, 1, 6]) == [5, 5, 5, 5, 6]
assert rolling_max([3, 4, 1, 5, 2]) == [3, 4, 4, 5, 5]
assert rolling_max([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]) == [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
assert rolling_max([3, 2, 1, 2, 3, 2, 1, 2, 3, 2, 1]) == [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
assert rolling_max([3, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1]) == [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
assert rolling_max([1, 2, 3, 2, 1, 2, 3, 2, 1, 2, 3]) == [1, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3]
assert rolling_max([5, 1, 4, 3, 2]) == [5, 5, 5, 5, 5]
assert rolling_max([0, 1, 4, 3, 0]) == [0, 1, 4, 4, 4]
assert rolling_max([1, 2, 3, 2, 1, 2, 3, 2, 1]) == [1, 2, 3, 3, 3, 3, 3, 3, 3]
assert rolling_max([1, 2, 3, 2, 1, 2, 3, 2, 1, 2, 3, 2, 1]) == [1, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
assert rolling_max([1, 2, 3, 4, 1]) == [1, 2, 3, 4, 4]
assert rolling_max([1, 2, 1, 2, 1, 2, 3, 2, 1]) == [1, 2, 2, 2, 2, 2, 3, 3, 3]
assert rolling_max([0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0]
assert rolling_max([-5, -10, -50, -30, -20]) == [-5, -5, -5, -5, -5]
assert rolling_max([1, 2, 3, 4, 5, 6, 7, 8, 9, 0]) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 9]
assert rolling_max([4, 5, 6, 3, 7, 8, 1, 9, 2, 0]) == [4, 5, 6, 6, 7, 8, 8, 9, 9, 9]
assert rolling_max([9, 8, 7, 6, 5, 4, 3, 2, 1]) == [9, 9, 9, 9, 9, 9, 9, 9, 9]
assert rolling_max([1, 2, 3, 4, 5, 6, 7, 8, 9]) == [1, 2, 3, 4, 5, 6, 7, 8, 9]
assert rolling_max([1, 1, 1, 1, 1, 1, 1, 1, 1]) == [1, 1, 1, 1, 1, 1, 1, 1, 1]
assert rolling_max([1, 2, 1, 2, 1, 2, 1, 2, 1]) == [1, 2, 2, 2, 2, 2, 2, 2, 2]
assert rolling_max([1, 2, 3, 4, 3, 2, 1, 2, 3]) == [1, 2, 3, 4, 4, 4, 4, 4, 4]
assert rolling_max([2, 2, 1, 3, 3]) == [2, 2, 2, 3, 3]
assert rolling_max([1, 2, 1, 3, 4]) == [1, 2, 2, 3, 4]
assert rolling_max([2, 4, 1, 7, 6, 8]) == [2, 4, 4, 7, 7, 8]
assert rolling_max([-1, -2, -3, -4, -5]) == [-1, -1, -1, -1, -1]
assert rolling_max([1, -2, 3, -4, 5]) == [1, 1, 3, 3, 5]
assert rolling_max([3, 2, 1, 3, 2, 1, 3, 2, 1]) == [3, 3, 3, 3, 3, 3, 3, 3, 3]
assert rolling_max([1, 3, 5, 7, 9, 1, 5, 7, 9]) == [1, 3, 5, 7, 9, 9, 9, 9, 9]
assert rolling_max([9, 7, 5, 3, 1, 9, 5, 3, 1]) == [9, 9, 9, 9, 9, 9, 9, 9, 9]
assert rolling_max([2, 2, 1, 2, 4, 2, 1, 2, 3, 2, 1]) == [2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4]
assert rolling_max([1, 1, 2, 3, 4, 4, 3, 4, 2, 1, 2, 1]) == [1, 1, 2, 3, 4, 4, 4, 4, 4, 4, 4, 4]
assert rolling_max([2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]) == [2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
assert rolling_max([4, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1]) == [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
assert rolling_max([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]) == [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
assert rolling_max([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16]) == [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]
assert rolling_max([1, 2, 3, 4, 3]) == [1, 2, 3, 4, 4]
assert rolling_max([1, 2, 3, 4, 0]) == [1, 2, 3, 4, 4]
assert rolling_max([1, 2, 1, 1, 0]) == [1, 2, 2, 2, 2]
assert rolling_max([1, 2, 1, 1, 4]) == [1, 2, 2, 2, 4]
assert rolling_max([1, 2, 1, 1, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 5, 4, 100, 2]) == [1, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 100, 100]
assert rolling_max([1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2]) == [1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
assert rolling_max([1, 2, 3, 2, 1, 2, 3, 2, 1, 2, 3, 2]) == [1, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
assert rolling_max([1, 2, 1, 2, 3, 2, 1, 2, 3, 2, 1, 2]) == [1, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3]
assert rolling_max([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8]) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 10]
assert rolling_max([1, 3, 1, 4, 5]) == [1, 3, 3, 4, 5]
assert rolling_max([1, 3, -1, 4, 5]) == [1, 3, 3, 4, 5]
assert rolling_max([1, 3, -1, -2, 5]) == [1, 3, 3, 3, 5]
assert rolling_max([1, 3, -1, -2, 5, 1]) == [1, 3, 3, 3, 5, 5]
assert rolling_max([1, 3, -1, -2, -3, -4, 5, 1]) == [1, 3, 3, 3, 3, 3, 5, 5]
assert rolling_max([-1, -2, -3, -1, -2, -1]) == [-1, -1, -1, -1, -1, -1]
assert rolling_max([-1, -2, -3, -1, -2, 1]) == [-1, -1, -1, -1, -1, 1]
assert rolling_max([-1, 2, 3, -1, 2, 1]) == [-1, 2, 3, 3, 3, 3]
assert rolling_max([5, 1, 3, 8, 4]) == [5, 5, 5, 8, 8]
assert rolling_max([1, 1, 1, 1, 0]) == [1, 1, 1, 1, 1]
assert rolling_max([1, 1, 1, 0, 0]) == [1, 1, 1, 1, 1]
assert rolling_max([1, 1, 0, 0, 0]) == [1, 1, 1, 1, 1]
assert rolling_max([0]) == [0]
assert rolling_max([1, 2, 9, 3, 4, 10, 11, 5, 3, 1]) == [1, 2, 9, 9, 9, 10, 11, 11, 11, 11]
assert rolling_max([1, 2, -5, -4, -5, 1, 2, -5, -4, -5]) == [1, 2, 2, 2, 2, 2, 2, 2, 2, 2]
assert rolling_max([1, 3, 2, 5, 4]) == [1, 3, 3, 5, 5]
assert rolling_max([1, 1, 2, 1, 2]) == [1, 1, 2, 2, 2]
assert rolling_max([1, 1, 2, 1, 2, 3]) == [1, 1, 2, 2, 2, 3]
assert rolling_max([3, 1, 2, 1, 2, 3]) == [3, 3, 3, 3, 3, 3]
assert rolling_max([3, 1, 2, 3, 2, 1]) == [3, 3, 3, 3, 3, 3]
assert rolling_max([1, 2, 3, 4, 5, 6, 5, 4, 3, 2, 1]) == [1, 2, 3, 4, 5, 6, 6, 6, 6, 6, 6]
assert rolling_max([5, 2, 4, 2, 1]) == [5, 5, 5, 5, 5]
assert rolling_max([3, 2, 3, 3, 3]) == [3, 3, 3, 3, 3]
assert rolling_max([3, 1, 4, 2, 3]) == [3, 3, 4, 4, 4]
assert rolling_max([0, -1, 1, -1, 1]) == [0, 0, 1, 1, 1]
assert rolling_max([2, 1, -1, 2, 1]) == [2, 2, 2, 2, 2]
assert rolling_max([6, 5, 4, 3, 2]) == [6, 6, 6, 6, 6]
assert rolling_max([2, 3, 4]) == [2, 3, 4]
assert rolling_max([1, 2, 3, 2, 4, 5, 6, 2, 1]) == [1, 2, 3, 3, 4, 5, 6, 6, 6]
assert rolling_max([1, 1]) == [1, 1]
assert rolling_max([2, 3, 1]) == [2, 3, 3]
assert rolling_max([3, 2, 1, 4]) == [3, 3, 3, 4]
assert rolling_max([3, 2, 1, 4, 5, 3]) == [3, 3, 3, 4, 5, 5]
assert rolling_max([3, 2, 1, 4, 5, 3, 1]) == [3, 3, 3, 4, 5, 5, 5]
assert rolling_max([3, 2, 1, 4, 5, 3, 1, 4]) == [3, 3, 3, 4, 5, 5, 5, 5]
assert rolling_max([1, -2, 3, -2, 1]) == [1, 1, 3, 3, 3]
assert rolling_max([1, -2, -3, -2, 1]) == [1, 1, 1, 1, 1]
assert rolling_max([-1, -2, -3, -2, -1]) == [-1, -1, -1, -1, -1]
assert rolling_max([0, 1, 3, 2, 4, 5, 6, 7, 9, 8]) == [0, 1, 3, 3, 4, 5, 6, 7, 9, 9]
assert rolling_max([10, 8, 12, 0, 7, 3, 8, 9, 10, 11]) == [10, 10, 12, 12, 12, 12, 12, 12, 12, 12]
assert rolling_max([10, 8, 12, 0, 7, 3, 8, 9, 10, 11, 3, 2, 4, 5, 6, 7, 9, 8, 10, 11]) == [10, 10, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12]
assert rolling_max([2, 1, 2]) == [2, 2, 2]
assert rolling_max([1, 2, 1, 2]) == [1, 2, 2, 2]
assert rolling_max([1, 1, 1, 1]) == [1, 1, 1, 1]
assert rolling_max([1, 1, 1, 1, 2]) == [1, 1, 1, 1, 2]
assert rolling_max([1, 1, 1, 1, 2, 1]) == [1, 1, 1, 1, 2, 2]
assert rolling_max([1, 4, 2, 5, 2, 1, 2, 3, 2, 1]) == [1, 4, 4, 5, 5, 5, 5, 5, 5, 5]
assert rolling_max([1, 2, 3, 4, 5, 1, 2, 3, 4, 5]) == [1, 2, 3, 4, 5, 5, 5, 5, 5, 5]
assert rolling_max([3, 3, 3, 3, 3]) == [3, 3, 3, 3, 3]
assert rolling_max([3, 2, 3]) == [3, 3, 3]
assert rolling_max([3, 3, 2]) == [3, 3, 3]
assert rolling_max([3, 3, 3]) == [3, 3, 3]
assert rolling_max([3, 3, 2, 3]) == [3, 3, 3, 3]
assert rolling_max([3, 3, 2, 1]) == [3, 3, 3, 3]
assert rolling_max([3, 3, 2, 4]) == [3, 3, 3, 4]
assert rolling_max([-1, -2, -3]) == [-1, -1, -1]
assert rolling_max([1, 2, -1, 4, 1, 6, 5, -2, 7]) == [1, 2, 2, 4, 4, 6, 6, 6, 7]
assert rolling_max([2, 1, 2, 3, 2, 1, 2, 3, 2, 1]) == [2, 2, 2, 3, 3, 3, 3, 3, 3, 3]
assert rolling_max([5, 5, 4, 4, 4]) == [5, 5, 5, 5, 5]
assert rolling_max([2, 3, 4, 5, 1]) == [2, 3, 4, 5, 5]
assert rolling_max([5, 5, 4, 4, 1]) == [5, 5, 5, 5, 5]
assert rolling_max([5, 5, 4, 5, 1]) == [5, 5, 5, 5, 5]
assert rolling_max([5, 5, 4, 5, 5]) == [5, 5, 5, 5, 5]
assert rolling_max([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]) == [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
assert rolling_max([6, 2, 4, 2, 7]) == [6, 6, 6, 6, 7]
assert rolling_max([1, 3, 2, 4]) == [1, 3, 3, 4]
assert rolling_max([1, 3, 2, 4, 2]) == [1, 3, 3, 4, 4]
assert rolling_max([1, 3, 2, 4, 2, 3]) == [1, 3, 3, 4, 4, 4]
assert rolling_max([1, 3, 2, 4, 2, 3, 1]) == [1, 3, 3, 4, 4, 4, 4]
assert rolling_max([1, 3, 2, 4, 2, 3, 1, 0]) == [1, 3, 3, 4, 4, 4, 4, 4]
assert rolling_max([5, 4, 3, 4, 5]) == [5, 5, 5, 5, 5]
assert rolling_max([5, 4, 3, 2, 1, 2, 3, 4, 5]) == [5, 5, 5, 5, 5, 5, 5, 5, 5]
assert rolling_max([5, 4, 3, 4, 5, 4, 3, 4, 5]) == [5, 5, 5, 5, 5, 5, 5, 5, 5]
assert rolling_max([1, 2, 3, 4, 5, 4, 3, 2, 1, 1, 2, 3, 4, 5, 4, 3, 2, 1]) == [1, 2, 3, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
assert rolling_max([1, 3, 1, 4, 5, 6, 7, 8, 10, 6, 4, 3, 2, 1]) == [1, 3, 3, 4, 5, 6, 7, 8, 10, 10, 10, 10, 10, 10]
assert rolling_max([1, 3, 2, 4, 5, 6, 7, 8, 10, 6, 4, 3, 2, 1]) == [1, 3, 3, 4, 5, 6, 7, 8, 10, 10, 10, 10, 10, 10]
assert rolling_max([1, 2, 3, 2, 5, 6, 7, 8, 10, 6, 4, 3, 2, 1]) == [1, 2, 3, 3, 5, 6, 7, 8, 10, 10, 10, 10, 10, 10]
assert rolling_max([9, 3, 10, 5, 1, 7, 0, 6, 8, 7]) == [9, 9, 10, 10, 10, 10, 10, 10, 10, 10]
assert rolling_max([3, 4, 5, 1, 2]) == [3, 4, 5, 5, 5]
assert rolling_max([1, 2, 3, 4, 5, 3, 4, 3, 2, 1]) == [1, 2, 3, 4, 5, 5, 5, 5, 5, 5]
assert rolling_max([5, 4, 3, 2, 1, 1, 2, 3, 4, 5]) == [5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
assert rolling_max([5, 4, 9, 2, 1]) == [5, 5, 9, 9, 9]
assert rolling_max([5, 4, 5, 9, 2, 1]) == [5, 5, 5, 9, 9, 9]
assert rolling_max([5, 4, 5, 9, 2, 1, 5]) == [5, 5, 5, 9, 9, 9, 9]
assert rolling_max([5, 4, 5, 9, 2, 1, 5, 9]) == [5, 5, 5, 9, 9, 9, 9, 9]
assert rolling_max([5, 4, 5, 9, 2, 1, 5, 9, 1]) == [5, 5, 5, 9, 9, 9, 9, 9, 9]
assert rolling_max([5, 4, 5, 9, 2, 1, 5, 9, 1, 8]) == [5, 5, 5, 9, 9, 9, 9, 9, 9, 9]
assert rolling_max([1, 3, 1, 2, 0]) == [1, 3, 3, 3, 3]
assert rolling_max([3, 1, -1, 0, 1]) == [3, 3, 3, 3, 3]
assert rolling_max([5, 4, 3, 2, 1, 10]) == [5, 5, 5, 5, 5, 10]
assert rolling_max([2, 4, -1, 5, 3]) == [2, 4, 4, 5, 5]
