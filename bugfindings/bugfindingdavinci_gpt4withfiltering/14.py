from typing import List


def all_prefixes(string: str) -> List[str]:
    """ Return list of all prefixes from shortest to longest of the input string
    >>> all_prefixes('abc')
    ['a', 'ab', 'abc']
    """
    result = []

    for i in range(len(string)-1):
        result.append(string[:i+1])
    return result
assert all_prefixes("xyz") == ["x", "xy", "xyz"]
assert all_prefixes("a") == ["a"]
assert all_prefixes("") == []
assert all_prefixes("ab") == ["a", "ab"]
assert all_prefixes("abc") == ["a", "ab", "abc"]
assert all_prefixes("abcd") == ["a", "ab", "abc", "abcd"]
assert all_prefixes("abcde") == ["a", "ab", "abc", "abcd", "abcde"]
assert all_prefixes('abcd') == ['a', 'ab', 'abc', 'abcd']
assert all_prefixes('a') == ['a']
assert all_prefixes('') == []
assert all_prefixes("bob") == ['b', 'bo', 'bob']
assert all_prefixes("12345") == ['1', '12', '123', '1234', '12345']
assert all_prefixes('abc') == ['a', 'ab', 'abc']
assert all_prefixes('dcb') == ['d', 'dc', 'dcb']
assert all_prefixes('dbc') == ['d', 'db', 'dbc']
assert all_prefixes('ddb') == ['d', 'dd', 'ddb']
assert all_prefixes('ab') == ['a', 'ab']
assert all_prefixes('abcde') == ['a', 'ab', 'abc', 'abcd', 'abcde']
assert all_prefixes('abcdef') == ['a', 'ab', 'abc', 'abcd', 'abcde', 'abcdef']
assert all_prefixes('abcdefg') == ['a', 'ab', 'abc', 'abcd', 'abcde', 'abcdef', 'abcdefg']
assert all_prefixes('abcdefgh') == ['a', 'ab', 'abc', 'abcd', 'abcde', 'abcdef', 'abcdefg', 'abcdefgh']
assert all_prefixes('abcdefghi') == ['a', 'ab', 'abc', 'abcd', 'abcde', 'abcdef', 'abcdefg', 'abcdefgh', 'abcdefghi']
assert all_prefixes('MITT') == ['M', 'MI', 'MIT', 'MITT']
assert all_prefixes('OK') == ['O', 'OK']
assert all_prefixes('T') == ['T']
assert all_prefixes("bad") == ["b", "ba", "bad"]
assert all_prefixes('hello world') == ['h', 'he', 'hel', 'hell', 'hello', 'hello ', 'hello w', 'hello wo', 'hello wor', 'hello worl', 'hello world']
assert all_prefixes("abccba") == ["a", "ab", "abc", "abcc", "abccb", "abccba"]
assert all_prefixes("c") == ["c"]
assert all_prefixes('yam') == ['y', 'ya', 'yam']
assert all_prefixes('horse') == ['h', 'ho', 'hor', 'hors', 'horse']
assert all_prefixes("x") == ["x"]
assert all_prefixes('123') == ['1', '12', '123']
assert all_prefixes('asdfasdf') == ['a', 'as', 'asd', 'asdf', 'asdfa', 'asdfas', 'asdfasd', 'asdfasdf']
assert all_prefixes("beautiful") == ["b", "be", "bea", "beau", "beaut", "beauti", "beautif", "beautifu", "beautiful"]
assert all_prefixes("aaa") == ["a", "aa", "aaa"]
assert all_prefixes("hello world") == ["h", "he", "hel", "hell", "hello", "hello ", "hello w", "hello wo", "hello wor", "hello worl", "hello world"]
assert all_prefixes("123") == ["1", "12", "123"]
assert all_prefixes("🤣🤣🤣") == ["🤣", "🤣🤣", "🤣🤣🤣"]
assert all_prefixes("doge") == ["d", "do", "dog", "doge"]
assert all_prefixes('kitties') == ['k', 'ki', 'kit', 'kitt', 'kitti', 'kittie', 'kitties']
assert all_prefixes('one') == ['o', 'on', 'one']
assert all_prefixes('hi') == ['h', 'hi']
assert all_prefixes('baddies') == ['b', 'ba', 'bad', 'badd', 'baddi', 'baddie', 'baddies']
assert all_prefixes('haha') == ['h', 'ha', 'hah', 'haha']
assert all_prefixes('goodies') == ['g', 'go', 'goo', 'good', 'goodi', 'goodie', 'goodies']
assert all_prefixes('hihi') == ['h', 'hi', 'hih', 'hihi']
assert all_prefixes("abracadabra") == ["a", "ab", "abr", "abra", "abrac", "abraca", "abracad", "abracada", "abracadab", "abracadabr", "abracadabra"]
assert all_prefixes("bob") == ["b", "bo", "bob"]
assert all_prefixes("ba") == ["b", "ba"]
assert all_prefixes("cab") == ["c", "ca", "cab"]
assert all_prefixes('helloworld') == ['h', 'he', 'hel', 'hell', 'hello', 'hellow', 'hellowo', 'hellowor', 'helloworl', 'helloworld']
assert all_prefixes('ca') == ['c', 'ca']
assert all_prefixes('c') == ['c']
assert all_prefixes('car') == ['c', 'ca', 'car']
assert all_prefixes('carrot') == ['c', 'ca', 'car', 'carr', 'carro', 'carrot']
assert all_prefixes('bannanas') == ['b', 'ba', 'ban', 'bann', 'banna', 'bannan', 'bannana', 'bannanas']
assert all_prefixes('Python') == ['P', 'Py', 'Pyt', 'Pyth', 'Pytho', 'Python']
assert all_prefixes('1234') == ['1', '12', '123', '1234']
assert all_prefixes('12345') == ['1', '12', '123', '1234', '12345']
assert all_prefixes('123456') == ['1', '12', '123', '1234', '12345', '123456']
assert all_prefixes("hello") == ["h", "he", "hel", "hell", "hello"]
assert all_prefixes("aaaaaaaaaa") == ["a", "aa", "aaa", "aaaa", "aaaaa", "aaaaaa", "aaaaaaa", "aaaaaaaa", "aaaaaaaaa", "aaaaaaaaaa"]
assert all_prefixes("worl") == ["w", "wo", "wor", "worl"]
assert all_prefixes(" ") == [" "]
assert all_prefixes("pig") == ["p", "pi", "pig"]
assert all_prefixes("AB") == ["A", "AB"]
assert all_prefixes("ABC") == ["A", "AB", "ABC"]
assert all_prefixes('ABCD') == ['A', 'AB', 'ABC', 'ABCD']
assert all_prefixes('ABCDE') == ['A', 'AB', 'ABC', 'ABCD', 'ABCDE']
assert all_prefixes('cb') == ['c', 'cb']
assert all_prefixes('cba') == ['c', 'cb', 'cba']
assert all_prefixes('aaaa') == ['a', 'aa', 'aaa', 'aaaa']
assert all_prefixes('123abc') == ['1', '12', '123', '123a', '123ab', '123abc']
assert all_prefixes('b') == ['b']
assert all_prefixes("aa") == ["a", "aa"]
assert all_prefixes('the') == ['t', 'th', 'the']
assert all_prefixes('prefix') == ['p', 'pr', 'pre', 'pref', 'prefi', 'prefix']
assert all_prefixes('coffee') == ['c', 'co', 'cof', 'coff', 'coffe', 'coffee']
assert all_prefixes('data') == ['d', 'da', 'dat', 'data']
assert all_prefixes('dog') == ['d', 'do', 'dog']
assert all_prefixes('donut') == ['d', 'do', 'don', 'donu', 'donut']
assert all_prefixes('engineer') == ['e', 'en', 'eng', 'engi', 'engin', 'engine', 'enginee', 'engineer']
assert all_prefixes('fun') == ['f', 'fu', 'fun']
assert all_prefixes('laptop') == ['l', 'la', 'lap', 'lapt', 'lapto', 'laptop']
assert all_prefixes('program') == ['p', 'pr', 'pro', 'prog', 'progr', 'progra', 'program']
