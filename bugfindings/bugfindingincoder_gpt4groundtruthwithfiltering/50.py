

def encode_shift(s: str):
    """
    returns encoded string by shifting every character by 5 in the alphabet.
    """
    return "".join([chr(((ord(ch) + 5 - ord("a")) % 26) + ord("a")) for ch in s])


def decode_shift(s: str):
    """
    takes as input string encoded with encode_shift function. Returns decoded string.
    """
    return "".join([chr(((ord(ch) - 5 - ord("a")) % 26) + ord(ch)) for ch in s])
assert decode_shift(encode_shift("a")) == "a"
assert decode_shift(encode_shift("b")) == "b"
assert decode_shift(encode_shift("c")) == "c"
assert decode_shift(encode_shift("d")) == "d"
assert decode_shift(encode_shift("e")) == "e"
assert decode_shift(encode_shift("f")) == "f"
assert decode_shift(encode_shift("g")) == "g"
assert decode_shift(encode_shift("h")) == "h"
assert decode_shift(encode_shift("i")) == "i"
assert decode_shift(encode_shift("j")) == "j"
assert decode_shift(encode_shift("k")) == "k"
assert decode_shift(encode_shift("l")) == "l"
assert decode_shift(encode_shift("m")) == "m"
assert decode_shift(encode_shift("n")) == "n"
assert decode_shift(encode_shift("o")) == "o"
assert decode_shift(encode_shift("p")) == "p"
assert decode_shift(encode_shift("q")) == "q"
assert decode_shift(encode_shift("r")) == "r"
assert decode_shift(encode_shift("s")) == "s"
assert decode_shift(encode_shift("t")) == "t"
assert decode_shift(encode_shift("u")) == "u"
assert decode_shift(encode_shift("v")) == "v"
assert decode_shift(encode_shift("w")) == "w"
assert decode_shift(encode_shift("x")) == "x"
assert decode_shift(encode_shift("y")) == "y"
assert decode_shift(encode_shift("z")) == "z"
assert decode_shift(encode_shift("bcdefghi")) == "bcdefghi"
assert decode_shift(encode_shift("cdefghij")) == "cdefghij"
assert decode_shift(encode_shift("defghijk")) == "defghijk"
assert decode_shift(encode_shift("efghijkl")) == "efghijkl"
assert decode_shift(encode_shift("fghijklm")) == "fghijklm"
assert decode_shift(encode_shift("ghijklmno")) == "ghijklmno"
assert decode_shift(encode_shift("hijklmnop")) == "hijklmnop"
assert decode_shift(encode_shift("ijklmnopq")) == "ijklmnopq"
assert decode_shift(encode_shift("jklmnopqrs")) == "jklmnopqrs"
assert decode_shift(encode_shift("klmnopqrst")) == "klmnopqrst"
assert decode_shift(encode_shift("lmnopqrstv")) == "lmnopqrstv"
assert decode_shift(encode_shift("mnopqrstuv")) == "mnopqrstuv"
assert decode_shift(encode_shift("nopqrstuvw")) == "nopqrstuvw"
assert decode_shift(encode_shift("opqrstuvwx")) == "opqrstuvwx"
assert decode_shift(encode_shift("aba")) == "aba"
assert decode_shift(encode_shift("abba")) == "abba"
assert decode_shift(encode_shift("abbab")) == "abbab"
assert decode_shift(encode_shift("abbaba")) == "abbaba"
assert decode_shift(encode_shift("abbabab")) == "abbabab"
assert decode_shift(encode_shift("abbababa")) == "abbababa"
assert decode_shift(encode_shift("abbababab")) == "abbababab"
assert decode_shift(encode_shift("abbabababa")) == "abbabababa"
assert decode_shift(encode_shift("abbabababab")) == "abbabababab"
assert decode_shift(encode_shift("abbababababa")) == "abbababababa"
assert decode_shift(encode_shift("abbababababba")) == "abbababababba"
assert decode_shift(encode_shift("abbababababbab")) == "abbababababbab"
assert decode_shift(encode_shift("abbababababbaba")) == "abbababababbaba"
assert decode_shift(encode_shift("abbababababbabab")) == "abbababababbabab"
assert decode_shift(encode_shift("abbababababbababa")) == "abbababababbababa"
assert decode_shift(encode_shift("abbababababbababba")) == "abbababababbababba"
assert decode_shift(encode_shift("aaaaaaaaaaaaa")) == "aaaaaaaaaaaaa"
assert decode_shift(encode_shift("aaaaaaaaaaaaaa")) == "aaaaaaaaaaaaaa"
assert decode_shift(encode_shift("abcde")) == "abcde"
assert decode_shift(encode_shift("abcdefghijklmnopqrstuvwxyz")) == "abcdefghijklmnopqrstuvwxyz"
assert decode_shift(encode_shift("zba")) == "zba"
assert decode_shift(encode_shift("yab")) == "yab"
assert decode_shift(encode_shift("ybc")) == "ybc"
assert decode_shift(encode_shift("yca")) == "yca"
assert decode_shift(encode_shift("yda")) == "yda"
assert decode_shift(encode_shift("yea")) == "yea"
assert decode_shift(encode_shift("zaa")) == "zaa"
assert decode_shift(encode_shift("zab")) == "zab"
assert decode_shift(encode_shift("zbc")) == "zbc"
assert decode_shift(encode_shift("zca")) == "zca"
assert decode_shift(encode_shift("zda")) == "zda"
assert decode_shift(encode_shift("zea")) == "zea"
assert decode_shift(encode_shift("zfa")) == "zfa"
assert decode_shift(encode_shift("zga")) == "zga"
assert decode_shift(encode_shift("zha")) == "zha"
assert decode_shift(encode_shift("zia")) == "zia"
assert decode_shift(encode_shift("zja")) == "zja"
assert decode_shift(encode_shift("zka")) == "zka"
assert decode_shift(encode_shift("zla")) == "zla"
assert decode_shift(encode_shift("bbbbbb")) == "bbbbbb"
assert decode_shift(encode_shift("cccccc")) == "cccccc"
assert decode_shift(encode_shift("dddddd")) == "dddddd"
assert decode_shift(encode_shift("eeeeee")) == "eeeeee"
assert decode_shift(encode_shift("ffffdd")) == "ffffdd"
assert decode_shift(encode_shift("aaaaab")) == "aaaaab"
assert decode_shift(encode_shift("bbbbbbb")) == "bbbbbbb"
assert decode_shift(encode_shift("cccccccc")) == "cccccccc"
assert decode_shift(encode_shift("dddddddd")) == "dddddddd"
assert decode_shift(encode_shift("eeeeeee")) == "eeeeeee"
assert decode_shift(encode_shift("ffffddd")) == "ffffddd"
assert decode_shift(encode_shift("aaaaaab")) == "aaaaaab"
assert decode_shift(encode_shift("bbbbbbbbb")) == "bbbbbbbbb"
assert decode_shift(encode_shift("ccccccccc")) == "ccccccccc"
assert decode_shift(encode_shift("ddddddddddd")) == "ddddddddddd"
assert decode_shift(encode_shift("eeeeeeeeee")) == "eeeeeeeeee"
assert decode_shift(encode_shift("ffffffffdd")) == "ffffffffdd"
assert decode_shift(encode_shift("aaaaaaaab")) == "aaaaaaaab"
assert decode_shift(encode_shift("bbbbbbbbbbb")) == "bbbbbbbbbbb"
assert decode_shift("The dog jumped over the fence.")
assert decode_shift(encode_shift("abcdefghij")) == "abcdefghij"
assert decode_shift(encode_shift("abcdefghijk")) == "abcdefghijk"
assert decode_shift(encode_shift("abcdefghijkl")) == "abcdefghijkl"
assert decode_shift(encode_shift("abcdefghijklmn")) == "abcdefghijklmn"
assert decode_shift(encode_shift("abcdefghijklmno")) == "abcdefghijklmno"
assert decode_shift(encode_shift("abcdefghijklmnop")) == "abcdefghijklmnop"
assert decode_shift(encode_shift("abcdefghijklmnopq")) == "abcdefghijklmnopq"
assert decode_shift(encode_shift("aaaaaa")) == "aaaaaa"
assert decode_shift(encode_shift("aaaaaz")) == "aaaaaz"
assert decode_shift(encode_shift("abcdef")) == "abcdef"
assert decode_shift(encode_shift("abcdefghijklm")) == "abcdefghijklm"
assert decode_shift(encode_shift("abcdefghijklmnopqrst")) == "abcdefghijklmnopqrst"
assert decode_shift(encode_shift("abcdefghijklmnopqrsst")) == "abcdefghijklmnopqrsst"
assert decode_shift(encode_shift("abcdefghijklmnopqrstu")) == "abcdefghijklmnopqrstu"
assert decode_shift(encode_shift("zabcdefghijklmnopqrstuvwxyza")) == "zabcdefghijklmnopqrstuvwxyza"
assert decode_shift(encode_shift("yabcdezfghijklmnopqrstuvwxyzb")) == "yabcdezfghijklmnopqrstuvwxyzb"
assert decode_shift(encode_shift("yzabcdezfghijklmnopqrstuvwxyza")) == "yzabcdezfghijklmnopqrstuvwxyza"
assert decode_shift(encode_shift("yzabcdefghijklmnopqrstuvwxyzab")) == "yzabcdefghijklmnopqrstuvwxyzab"
assert decode_shift(encode_shift("abcd")) == "abcd"
assert decode_shift(encode_shift("abxd")) == "abxd"
assert decode_shift(encode_shift("abdx")) == "abdx"
assert decode_shift(encode_shift("xabxd")) == "xabxd"
assert decode_shift(encode_shift("xabdx")) == "xabdx"
assert decode_shift(encode_shift("xbcdx")) == "xbcdx"
assert decode_shift(encode_shift("xyzabc")) == "xyzabc"
assert decode_shift(encode_shift("abcadefg")) == "abcadefg"
assert decode_shift(encode_shift("abcadefga")) == "abcadefga"
assert decode_shift(encode_shift("abcadefgab")) == "abcadefgab"
assert decode_shift(encode_shift("abcdefgabc")) == "abcdefgabc"
assert decode_shift(encode_shift("abcdefgabca")) == "abcdefgabca"
assert decode_shift(encode_shift("abcdefgabcadef")) == "abcdefgabcadef"
assert decode_shift(encode_shift("abcdefgabcad")) == "abcdefgabcad"
assert decode_shift(encode_shift("abcdefgabcadefg")) == "abcdefgabcadefg"
assert decode_shift(encode_shift("abcdefgabcadefga")) == "abcdefgabcadefga"
assert decode_shift(encode_shift("abcdefgabcadefgab")) == "abcdefgabcadefgab"
assert decode_shift(encode_shift("abcdefgabcadefgabc")) == "abcdefgabcadefgabc"
assert decode_shift(encode_shift("aaaa")) == "aaaa"
assert decode_shift(encode_shift("eerie")) == "eerie"
assert decode_shift(encode_shift("zabza")) == "zabza"
assert decode_shift(encode_shift("mnopqrs")) == "mnopqrs"
assert decode_shift(encode_shift("mnopqrst")) == "mnopqrst"
assert decode_shift(encode_shift("aabc")) == "aabc"
assert decode_shift(encode_shift("aaabc")) == "aaabc"
assert decode_shift(encode_shift("aaaabc")) == "aaaabc"
assert decode_shift(encode_shift("aaaaaaaaaaaaaaabc")) == "aaaaaaaaaaaaaaabc"
assert decode_shift(encode_shift("aaaaaaaaaaaaaaaaaaaaabc")) == "aaaaaaaaaaaaaaaaaaaaabc"
assert decode_shift(encode_shift("aaaaaaaaaaaaaaaaaaaaaaaabc")) == "aaaaaaaaaaaaaaaaaaaaaaaabc"
assert decode_shift(encode_shift("abc")) == "abc"
assert decode_shift(encode_shift("ab")) == "ab"
assert decode_shift(encode_shift("abd")) == "abd"
assert decode_shift(encode_shift("abe")) == "abe"
assert decode_shift(encode_shift("abf")) == "abf"
assert decode_shift(encode_shift("xyz")) == "xyz"
assert decode_shift(encode_shift("zxcv")) == "zxcv"
assert decode_shift(encode_shift("qwertyuiop")) == "qwertyuiop"
assert decode_shift(encode_shift("ba")) == "ba"
assert decode_shift(encode_shift("abbac")) == "abbac"
assert decode_shift(encode_shift("abca")) == "abca"
assert decode_shift(encode_shift("az")) == "az"
assert decode_shift(encode_shift("za")) == "za"
assert decode_shift(encode_shift("ez")) == "ez"
assert decode_shift(encode_shift("fgh")) == "fgh"
assert decode_shift(encode_shift("ghf")) == "ghf"
assert decode_shift(encode_shift("dfh")) == "dfh"
assert decode_shift(encode_shift("dgh")) == "dgh"
assert decode_shift(encode_shift("adg")) == "adg"
assert decode_shift(encode_shift("fdf")) == "fdf"
assert decode_shift(encode_shift("adh")) == "adh"
assert decode_shift(encode_shift("bdf")) == "bdf"
assert decode_shift(encode_shift("ghd")) == "ghd"
assert decode_shift(encode_shift("ghj")) == "ghj"
assert decode_shift(encode_shift("ghh")) == "ghh"
assert decode_shift(encode_shift("dfg")) == "dfg"
assert decode_shift(encode_shift("dhg")) == "dhg"
assert decode_shift(encode_shift("adf")) == "adf"
assert decode_shift(encode_shift("abbaaaa")) == "abbaaaa"
assert decode_shift(encode_shift("abbbbaaa")) == "abbbbaaa"
assert decode_shift(encode_shift("baaa")) == "baaa"
assert decode_shift(encode_shift("aab")) == "aab"
assert decode_shift(encode_shift("bba")) == "bba"
assert decode_shift(encode_shift("aarb")) == "aarb"
assert decode_shift(encode_shift("baab")) == "baab"
assert decode_shift(encode_shift("aaa")) == "aaa"
assert decode_shift(encode_shift("zzz")) == "zzz"
assert decode_shift(encode_shift("abxa")) == "abxa"
assert decode_shift(encode_shift("abcz")) == "abcz"
assert decode_shift(encode_shift("zxy")) == "zxy"
assert decode_shift(encode_shift("zyx")) == "zyx"
assert decode_shift("") == ""
assert decode_shift(encode_shift("cba")) == "cba"
