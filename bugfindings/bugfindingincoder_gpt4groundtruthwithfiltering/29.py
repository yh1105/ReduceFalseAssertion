from typing import List


def filter_by_prefix(strings: List[str], prefix: str) -> List[str]:
    """ Filter an input list of strings only for ones that start with a given prefix.
    >>> filter_by_prefix([], 'a')
    []
    >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')
    ['abc', 'array']
    """
    return [x for x in strings if x.endswith(prefix)]
assert filter_by_prefix(["abcd", "efgh", "ijkl"], "c") == []
assert filter_by_prefix(["abcd", "efgh", "ijkl"], "d") == []
assert filter_by_prefix(["abcd", "efgh", "ijkl"], "f") == []
assert filter_by_prefix(["abcd", "efgh", "ijkl"], "g") == []
assert filter_by_prefix(["abcd", "efgh", "ijkl"], "h") == []
assert filter_by_prefix(["abcd", "efgh", "ijkl"], "j") == []
assert filter_by_prefix(["abcd", "efgh", "ijkl"], "k") == []
assert filter_by_prefix(["abcd", "efgh", "ijkl"], "l") == []
assert filter_by_prefix(["abcd", "efgh", "ijkl"], "m") == []
assert filter_by_prefix(["abcd", "efgh", "ijkl"], "n") == []
assert filter_by_prefix(["abcd", "efgh", "ijkl"], "o") == []
assert filter_by_prefix(["abcd", "efgh", "ijkl"], "p") == []
assert filter_by_prefix(["abcd", "efgh", "ijkl"], "q") == []
assert filter_by_prefix(["aaa", "bbb"], "") == ["aaa", "bbb"]
assert filter_by_prefix(['A', 'B', 'C'], 'A') == ['A']
assert filter_by_prefix(['A', 'B', 'C'], 'B') == ['B']
assert filter_by_prefix(['A', 'B', 'C'], 'C') == ['C']
assert filter_by_prefix([], 'A') == []
assert filter_by_prefix([], 'B') == []
assert filter_by_prefix([], 'C') == []
assert filter_by_prefix(['A', 'B', 'C'], 'D') == []
assert filter_by_prefix(["hey", "there"], "h") == ["hey"]
assert filter_by_prefix([''], '') == ['']
assert filter_by_prefix(['hi'], 'hi') == ['hi']
assert filter_by_prefix(["a", "b", "c", "d", "e"], "f") == []
assert filter_by_prefix(["azerty", "azerty2", "azerty3", "azerty4"], "azertyx") == []
assert filter_by_prefix([], "w") == []
assert filter_by_prefix([], "a") == []
assert filter_by_prefix([], "aap") == []
assert filter_by_prefix([], "ara") == []
assert filter_by_prefix([], "aardvark") == []
assert filter_by_prefix([], "apple") == []
assert filter_by_prefix([], None) == []
assert filter_by_prefix([], "x") == []
assert filter_by_prefix(["a", "b"], "") == ["a", "b"]
assert filter_by_prefix(["a", "b", "c"], "y") == []
assert filter_by_prefix(['foo', 'bar', 'baz', 'quux', 'quux', 'quuz'], 'foo') == ['foo']
assert filter_by_prefix(['foo', 'bar', 'baz', 'quux', 'quux', 'quuz'], 'baz') == ['baz']
assert filter_by_prefix(['foo', 'bar', 'baz', 'quux', 'quux', 'quuz'], 'quuz') == ['quuz']
assert filter_by_prefix([], '') == []
assert filter_by_prefix([], prefix="a") == []
assert filter_by_prefix(["a"], prefix="a") == ["a"]
assert filter_by_prefix(["this", "is", "a", "test"], "is") == ["is"]
assert filter_by_prefix(["this", "is", "a", "test"], "a") == ["a"]
assert filter_by_prefix(['abc', 'd', 'ef'], 'abc') == ['abc']
assert filter_by_prefix(["foo"], "foo") == ["foo"]
assert filter_by_prefix(["1", "10", "2", "3"], "4") == []
assert filter_by_prefix(['foo'], 'foo') == ['foo']
assert filter_by_prefix(['foo', 'bar', 'baz'], 'foo') == ['foo']
assert filter_by_prefix(["1", "2", "3"], "a") == []
assert filter_by_prefix(["hello", "world", "foobar", "goodbye"], "hello") == ["hello"]
assert filter_by_prefix(["hello", "world", "foobar", "goodbye"], "foobar") == ["foobar"]
assert filter_by_prefix(["hello", "world", "foobar", "goodbye"], "goodbye") == ["goodbye"]
assert filter_by_prefix(["hello", "world", "foobar", "goodbye"], "helloworldfo") == []
assert filter_by_prefix(["abc", "def", "ghi"], "c") == []
assert filter_by_prefix(["abc", "def", "ghi"], "a") == ["abc"]
assert filter_by_prefix(["abc", "def", "ghi"], "d") == ["def"]
assert filter_by_prefix(["aa", "bb", "cc"], "c") == ["cc"]
assert filter_by_prefix(["a", "bb", "cc"], "c") == ["cc"]
assert filter_by_prefix(["abc", "def", "ghi"], "g") == ["ghi"]
assert filter_by_prefix(["a", "b"], "c") ==  []
assert filter_by_prefix(["a", "b", "c"], "c") ==  ["c"]
assert filter_by_prefix([], "a") ==  []
assert filter_by_prefix(['', 'a', 'bc', 'def', 'ghijklmnop'], 'def') == ['def']
assert filter_by_prefix(['', 'a', 'bc', 'def', 'ghijklmnop'], 'bc') == ['bc']
assert filter_by_prefix(['', 'a', 'bc', 'def', 'ghijklmnop'], 'hij') == []
assert filter_by_prefix(["foo", "bar", "baz"], "bar") == ["bar"]
assert filter_by_prefix([], b"a") == []
assert filter_by_prefix([], b"") == []
assert filter_by_prefix([], b"b") == []
assert filter_by_prefix(["a"], "") == ["a"]
assert filter_by_prefix(["a", "b", "c"], "") == ["a", "b", "c"]
assert filter_by_prefix(["a"], u"a") == ["a"]
assert filter_by_prefix(["a", u"a"], u"a") == ["a", "a"]
assert filter_by_prefix(["a", u"a", u"b"], u"a") == ["a", "a"]
assert filter_by_prefix([], u"a") == []
assert filter_by_prefix([], u"b") == []
assert filter_by_prefix(["abc", "def", "ghi"], "cde") == []
assert filter_by_prefix(["abc", "def", "ghi"], "def") == ["def"]
assert filter_by_prefix(["abc", "def", "ghi"], "ghi") == ["ghi"]
assert filter_by_prefix(["abc", "def", "ghi"], "aabc") == []
assert filter_by_prefix(["a", "b", "c", "d", "e"], "x") == []
assert filter_by_prefix(["a", "b", "c", "d"], "a") == ["a"]
assert filter_by_prefix(["a", "b", "c", "d"], "d") == ["d"]
assert filter_by_prefix(["a", "ab", "abc"], "a") ==  ["a", "ab", "abc"]
assert filter_by_prefix(["ab", "abc", "abcd"], "ab") == ["ab", "abc", "abcd"]
assert filter_by_prefix(["a", "b"], "c") == []
assert filter_by_prefix([], "c") == []
assert filter_by_prefix([], "") == []
assert filter_by_prefix(['a b c'], 'a') == ['a b c']
assert filter_by_prefix(['a', 'b', 'c'], 'cc bc') == []
assert filter_by_prefix(["a", "b", "c"], "zz") == []
assert filter_by_prefix(["a", "b", "c"], "ab") == []
assert filter_by_prefix(["a"], "a") == ["a"]
assert filter_by_prefix(["a", "b", "c"], "b") == ["b"]
assert filter_by_prefix(["a", "b", "c"], "a") == ["a"]
assert filter_by_prefix(["foo", "bar", "baz"], "b") == ["bar", "baz"]
assert filter_by_prefix(["a", "b", "c"], "c") == ["c"]
assert filter_by_prefix(["a", "b", "c"], "d") == []
assert filter_by_prefix(["Hello", "World", "Python"], "World") == ["World"]
assert filter_by_prefix(["Hello", "World", "Python"], "Python") == ["Python"]
assert filter_by_prefix(["Hello", "World", "Python"], "Hi") == []
assert filter_by_prefix(["Hello", "World", "Python"], "Hi!") == []
assert filter_by_prefix(["abc", "def", "ghi"], prefix="def") == ["def"]
assert filter_by_prefix(["abc", "def", "ghi"], prefix="ghi") == ["ghi"]
assert filter_by_prefix(["a", "ab", "abc", "abcd"], "aabc") == []
assert filter_by_prefix(["a", "ab", "abc", "abcd"], "abcde") == []
assert filter_by_prefix(["spam", "eggs", "spam"], "eggs") == ["eggs"]
assert filter_by_prefix(["spam", "eggs", "spam"], "h") == []
assert filter_by_prefix(["foo", "bar"], "foo") == ["foo"]
assert filter_by_prefix(["foo", "bar"], "baz") == []
assert filter_by_prefix(['hello', 'goodbye'], 'h') == ['hello']
assert filter_by_prefix(['hello', 'goodbye'], 'hello') == ['hello']
assert filter_by_prefix(['hello', 'goodbye'], 'o') == []
assert filter_by_prefix(['hello', 'goodbye'], 'hi') == []
assert filter_by_prefix(["foo", "bar", "baz", "quux"], "nope") == []
assert filter_by_prefix(["foo", "bar", "baz"], "baz") == ["baz"]
assert filter_by_prefix(["foo", "bar", "baz"], "fubar") == []
assert filter_by_prefix(["hi", "goodbye"], prefix="goodbye") == ["goodbye"]
assert filter_by_prefix(['cat', 'dog','mouse'],'mouse') == ['mouse']
assert filter_by_prefix(['cat', 'dog','mouse'], 'ab') == []
assert filter_by_prefix(['hello', 'world', 'foo'], 'bar') == []
assert filter_by_prefix(['hello', 'world', 'foo', 'bar'], 'bar') == ['bar']
assert filter_by_prefix(["aa", "bb", "cc"], "b") == ["bb"]
assert filter_by_prefix(["hello", "world", "foo", "bar"], "hell") == ["hello"]
assert filter_by_prefix(["hello", "world", "foo", "bar"], "helllo") == []
assert filter_by_prefix(['test', 'test2', 'test3'], 'test2') == ['test2']
assert filter_by_prefix(["cat", "dog", "mouse", "dog"], 'ca') == ["cat"]
assert filter_by_prefix(["cat", "dog", "mouse", "dog"], 'co') == []
assert filter_by_prefix(["a", "b", "c", "d", "e"], "z") == []
assert filter_by_prefix([ 'a', 'b', 'c'], 'x') == []
assert filter_by_prefix(['hello', 'hi'], prefix='hi') == ['hi']
assert filter_by_prefix(["a", "b", "c"], "z") == []
assert filter_by_prefix(["abcd", "ab", "ac", "ba", "bc", "b"], "bc") == ["bc"]
assert filter_by_prefix(["hello", "world", "hi"], 'w') == ["world"]
assert filter_by_prefix(["hello", "world", "world2"], "blah") == []
assert filter_by_prefix(['a', 'b', 'c', 'd'], 'ax') == []
assert filter_by_prefix(["apple", "banana", "cherry", "durian"], prefix="ap") == ["apple"]
assert filter_by_prefix(["apple", "banana", "cherry", "durian"], prefix="banan") == ["banana"]
